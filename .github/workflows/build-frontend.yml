name: Build, Push & Deploy Frontend

on:
    workflow_dispatch:
    # (Optionnel) dÃ©ploie automatiquement quand le front change
    # push:
    #   paths:
    #     - "projet_devops_frontend/**"
    #     - "docker/Dockerfile.frontend"
    #     - ".github/workflows/frontend-deploy.yml"

jobs:
    build-and-push:
        name: Build and Push Docker image to ACR
        runs-on: ubuntu-latest
        env:
            ACR: ${{ secrets.ACR_LOGIN_SERVER }}
            IMAGE: ${{ secrets.ACR_LOGIN_SERVER }}/frontend
            NS: projet-devops-jordane
            DEPLOYMENT: frontend-deployment

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Login to ACR
              uses: azure/docker-login@v1
              with:
                  login-server: ${{ secrets.ACR_LOGIN_SERVER }}
                  username: ${{ secrets.ACR_USERNAME }}
                  password: ${{ secrets.ACR_PASSWORD }}

            - name: Build & Push image
              run: |
                  docker build -f docker/Dockerfile.frontend \
                    -t $IMAGE:latest \
                    -t $IMAGE:${{ github.sha }} \
                    ./projet_devops_frontend
                  docker push $IMAGE:latest
                  docker push $IMAGE:${{ github.sha }}

    deploy:
        name: Deploy to AKS
        runs-on: ubuntu-latest
        needs: build-and-push
        env:
            ACR: ${{ secrets.ACR_LOGIN_SERVER }}
            IMAGE: ${{ secrets.ACR_LOGIN_SERVER }}/frontend
            NS: projet-devops-jordane
            DEPLOYMENT: frontend-deployment

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install kubectl
              uses: azure/setup-kubectl@v4
              with:
                  version: v1.32.0

            - name: Configure kubeconfig from secret
              run: |
                  mkdir -p $HOME/.kube
                  echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > $HOME/.kube/config
                  kubectl config get-contexts
                  kubectl cluster-info

            - name: Apply manifests
              run: kubectl apply -n $NS -f k8s/frontend.yml
