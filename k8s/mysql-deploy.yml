apiVersion: v1
data:
    init.sql: |
        -- Création de la base de données
        CREATE DATABASE IF NOT EXISTS todolist_db
          DEFAULT CHARACTER SET utf8mb4
          COLLATE utf8mb4_general_ci;

        USE todolist_db;

        -- Création de la table des tâches
        CREATE TABLE IF NOT EXISTS tasks (
          id INT AUTO_INCREMENT PRIMARY KEY,
          nom VARCHAR(255) NOT NULL,
          description TEXT NULL,
          statut ENUM('à faire', 'en cours', 'terminée') DEFAULT 'à faire',
          created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
          updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
        );
kind: ConfigMap
metadata:
    name: mysql-initdb-cm
    namespace: projet-devops-jordane
---
apiVersion: v1
data:
    MYSQL_DATABASE: dG9kb2xpc3RfZGI=
    MYSQL_ROOT_PASSWORD: eW91cl9wYXNzd29yZA==
kind: Secret
metadata:
    name: mysql-secret
    namespace: projet-devops-jordane
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
    labels:
        app.kubernetes.io/component: db
        app.kubernetes.io/name: mysql-svc
    name: mysql-svc
    namespace: projet-devops-jordane
spec:
    ports:
        - port: 3306
          protocol: TCP
          targetPort: 3306
    selector:
        app.kubernetes.io/component: db
        app.kubernetes.io/name: mysql-sts
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
    labels:
        app.kubernetes.io/component: db
        app.kubernetes.io/name: mysql-sts
    name: mysql-sts
    namespace: projet-devops-jordane
spec:
    replicas: 1
    selector:
        matchLabels:
            app.kubernetes.io/component: db
            app.kubernetes.io/name: mysql-sts
    serviceName: mysql-sts
    template:
        metadata:
            labels:
                app.kubernetes.io/component: db
                app.kubernetes.io/name: mysql-sts
        spec:
            containers:
                - envFrom:
                      - secretRef:
                            name: mysql-secret
                  image: mysql:9
                  name: mysql
                  ports:
                      - containerPort: 3306
                  resources:
                      limits:
                          cpu: 500m
                          memory: 2Gi
                      requests:
                          cpu: 500m
                          memory: 1Gi
                  volumeMounts:
                      - mountPath: /var/lib/mysql
                        name: mysql-data-pvc
                      - mountPath: /docker-entrypoint-initdb.d
                        name: mysql-initdb
            volumes:
                - configMap:
                      name: mysql-initdb-cm
                  name: mysql-initdb
    volumeClaimTemplates:
        - metadata:
              name: mysql-data-pvc
          spec:
              accessModes:
                  - ReadWriteOnce
              resources:
                  requests:
                      storage: 10Gi
              storageClassName: managed-csi
              volumeMode: Filesystem
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    name: mysql-netpol
    namespace: projet-devops-jordane
spec:
    egress:
        - ports:
              - port: 53
                protocol: UDP
              - port: 53
                protocol: TCP
          to:
              - namespaceSelector:
                    matchLabels:
                        kubernetes.io/metadata.name: kube-system
    ingress:
        - from:
              - namespaceSelector:
                    matchLabels:
                        kubernetes.io/metadata.name: projet-devops-jordane
              - podSelector:
                    matchLabels:
                        app.kubernetes.io/component: backend
                        app.kubernetes.io/name: backend-deploy
          ports:
              - port: 3306
                protocol: TCP
    podSelector:
        matchLabels:
            app.kubernetes.io/component: db
            app.kubernetes.io/name: mysql-sts
    policyTypes:
        - Ingress
        - Egress
